'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _primus=require('primus');var _primus2=_interopRequireDefault(_primus);var _moment=require('moment');var _moment2=_interopRequireDefault(_moment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var GameServer=function(){function GameServer(){var _this=this;_classCallCheck(this,GameServer);this.sparks=[];this.primus=_primus2.default.createServer(function(spark){_this.Log('['+spark.id+'] Connected.');spark.on('data',function(data){_this.Log('['+spark.id+'] Data : '+JSON.stringify(data));spark.write({message:'LoginAccepted',id:2,data:{username:'username'}})});spark.on('error',function(error){return _this.Log('['+spark.id+'] Error : '+error)});spark.on('heartbeat',function(){return _this.Log('['+spark.id+'] We\'ve received a response to a heartbeat.')});spark.on('readyStateChange',function(state){return _this.Log('['+spark.id+'] readyStateChange : '+state)});spark.on('end',function(){_this.Log('['+spark.id+'] Disconnected.');_this.Log('Remaining '+_this.primus.connected+' sparks.')})},{port:2121,transformer:'engine.io'});this.Events()}_createClass(GameServer,[{key:'Events',value:function Events(){var _this2=this;this.primus.on('initialised',function(){return _this2.Log('Initialised.')});this.primus.on('close',function(){return _this2.Log('The server has been destroyed.')});this.primus.on('connection',function(){_this2.Log('We received a new connection.');_this2.Log('We have '+_this2.primus.connected+' sparks.');// this.primus.forEach((spark, next) => {
//   console.log(spark.id)
//   next()
// }, (err) => {
//   console.log('We are done');
// })
});this.primus.on('disconnection',function(){return _this2.Log('We received a disconnection.')});this.primus.on('plugin',function(){return _this2.Log('A new plugin has been added.')});this.primus.on('plugout',function(){return _this2.Log('A plugin has been removed.')});this.primus.on('log',function(data){return _this2.Log('Log : '+data)})}},{key:'Log',value:function Log(message){console.log('['+(0,_moment2.default)().format('LTS')+'][GameServer] '+message)}}]);return GameServer}();exports.default=GameServer;